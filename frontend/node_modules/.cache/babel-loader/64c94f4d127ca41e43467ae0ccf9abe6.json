{"ast":null,"code":"import _toConsumableArray from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport without from 'lodash/without';\nimport createPersistStateFunction, { getInitialStateFromStorage } from '../utils/persistState';\nimport arrayMove from '../utils/arrayMove';\nexport var TYPE_PLAYER = 'players/TYPE_PLAYER';\nexport var PLAYERS_ADD = 'players/PLAYERS_ADD';\nexport var PLAYERS_REMOVE = 'players/PLAYERS_REMOVE';\nexport var PLAYERS_MOVE = 'players/PLAYERS_MOVE';\nvar storageKey = 'stoogePlayers';\nvar storageVersion = 3;\nvar defaultState = {\n  items: []\n};\nvar initialState = getInitialStateFromStorage(defaultState, storageKey, storageVersion);\nvar persistState = createPersistStateFunction(storageKey);\n\nfunction addPlayer(state, player) {\n  var newState = _objectSpread({}, state, {\n    items: _toConsumableArray(state.items).concat([player])\n  });\n\n  return persistState(newState);\n}\n\nfunction removePlayer(state, player) {\n  var players = without(_toConsumableArray(state.items), player);\n\n  if (players.length < state.items.length) {\n    var newState = _objectSpread({}, state, {\n      items: players\n    });\n\n    return persistState(newState);\n  }\n\n  return state;\n}\n\nfunction movePlayers(state, oldIndex, newIndex) {\n  var newState = _objectSpread({}, state, {\n    items: arrayMove(state.items, oldIndex, newIndex)\n  });\n\n  return persistState(newState);\n}\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PLAYERS_ADD:\n      return addPlayer(state, action.player);\n\n    case PLAYERS_REMOVE:\n      return removePlayer(state, action.player);\n\n    case PLAYERS_MOVE:\n      return movePlayers(state, action.oldIndex, action.newIndex);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/jh/www/projects/stooge-dnd/src/reducers/players.js"],"names":["without","createPersistStateFunction","getInitialStateFromStorage","arrayMove","TYPE_PLAYER","PLAYERS_ADD","PLAYERS_REMOVE","PLAYERS_MOVE","storageKey","storageVersion","defaultState","items","initialState","persistState","addPlayer","state","player","newState","removePlayer","players","length","movePlayers","oldIndex","newIndex","action","type"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,0BAAP,IACCC,0BADD,QAEO,uBAFP;AAGA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAO,IAAMC,WAAW,GAAG,qBAApB;AACP,OAAO,IAAMC,WAAW,GAAG,qBAApB;AACP,OAAO,IAAMC,cAAc,GAAG,wBAAvB;AACP,OAAO,IAAMC,YAAY,GAAG,sBAArB;AAEP,IAAMC,UAAU,GAAG,eAAnB;AACA,IAAMC,cAAc,GAAG,CAAvB;AACA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAArB;AAGA,IAAMC,YAAY,GAAGV,0BAA0B,CAC9CQ,YAD8C,EAE9CF,UAF8C,EAG9CC,cAH8C,CAA/C;AAKA,IAAMI,YAAY,GAAGZ,0BAA0B,CAACO,UAAD,CAA/C;;AAEA,SAASM,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EAAkC;AACjC,MAAMC,QAAQ,qBACVF,KADU;AAEbJ,IAAAA,KAAK,qBAAMI,KAAK,CAACJ,KAAZ,UAAmBK,MAAnB;AAFQ,IAAd;;AAKA,SAAOH,YAAY,CAACI,QAAD,CAAnB;AACA;;AAED,SAASC,YAAT,CAAsBH,KAAtB,EAA6BC,MAA7B,EAAqC;AACpC,MAAMG,OAAO,GAAGnB,OAAO,oBAAKe,KAAK,CAACJ,KAAX,GAAmBK,MAAnB,CAAvB;;AACA,MAAIG,OAAO,CAACC,MAAR,GAAiBL,KAAK,CAACJ,KAAN,CAAYS,MAAjC,EAAyC;AACxC,QAAMH,QAAQ,qBACVF,KADU;AAEbJ,MAAAA,KAAK,EAAEQ;AAFM,MAAd;;AAKA,WAAON,YAAY,CAACI,QAAD,CAAnB;AACA;;AAED,SAAOF,KAAP;AACA;;AAED,SAASM,WAAT,CAAqBN,KAArB,EAA4BO,QAA5B,EAAsCC,QAAtC,EAAgD;AAC/C,MAAMN,QAAQ,qBACVF,KADU;AAEbJ,IAAAA,KAAK,EAAER,SAAS,CAACY,KAAK,CAACJ,KAAP,EAAcW,QAAd,EAAwBC,QAAxB;AAFH,IAAd;;AAKA,SAAOV,YAAY,CAACI,QAAD,CAAnB;AACA;;AAED,gBAAe,YAAkC;AAAA,MAAjCF,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXY,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKpB,WAAL;AACC,aAAOS,SAAS,CAACC,KAAD,EAAQS,MAAM,CAACR,MAAf,CAAhB;;AACD,SAAKV,cAAL;AACC,aAAOY,YAAY,CAACH,KAAD,EAAQS,MAAM,CAACR,MAAf,CAAnB;;AACD,SAAKT,YAAL;AACC,aAAOc,WAAW,CAACN,KAAD,EAAQS,MAAM,CAACF,QAAf,EAAyBE,MAAM,CAACD,QAAhC,CAAlB;;AACD;AACC,aAAOR,KAAP;AARF;AAUA,CAXD","sourcesContent":["import without from 'lodash/without';\nimport createPersistStateFunction, {\n\tgetInitialStateFromStorage,\n} from '../utils/persistState';\nimport arrayMove from '../utils/arrayMove';\n\nexport const TYPE_PLAYER = 'players/TYPE_PLAYER';\nexport const PLAYERS_ADD = 'players/PLAYERS_ADD';\nexport const PLAYERS_REMOVE = 'players/PLAYERS_REMOVE';\nexport const PLAYERS_MOVE = 'players/PLAYERS_MOVE';\n\nconst storageKey = 'stoogePlayers';\nconst storageVersion = 3;\nconst defaultState = {\n\titems: [],\n};\nconst initialState = getInitialStateFromStorage(\n\tdefaultState,\n\tstorageKey,\n\tstorageVersion,\n);\nconst persistState = createPersistStateFunction(storageKey);\n\nfunction addPlayer(state, player) {\n\tconst newState = {\n\t\t...state,\n\t\titems: [...state.items, player],\n\t};\n\n\treturn persistState(newState);\n}\n\nfunction removePlayer(state, player) {\n\tconst players = without([...state.items], player);\n\tif (players.length < state.items.length) {\n\t\tconst newState = {\n\t\t\t...state,\n\t\t\titems: players,\n\t\t};\n\n\t\treturn persistState(newState);\n\t}\n\n\treturn state;\n}\n\nfunction movePlayers(state, oldIndex, newIndex) {\n\tconst newState = {\n\t\t...state,\n\t\titems: arrayMove(state.items, oldIndex, newIndex),\n\t};\n\n\treturn persistState(newState);\n}\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase PLAYERS_ADD:\n\t\t\treturn addPlayer(state, action.player);\n\t\tcase PLAYERS_REMOVE:\n\t\t\treturn removePlayer(state, action.player);\n\t\tcase PLAYERS_MOVE:\n\t\t\treturn movePlayers(state, action.oldIndex, action.newIndex);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}