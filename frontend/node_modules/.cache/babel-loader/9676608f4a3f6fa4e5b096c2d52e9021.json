{"ast":null,"code":"import _toConsumableArray from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jh/www/projects/stooge-dnd/src/containers/monsters/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport filter from 'lodash/filter';\nimport findIndex from 'lodash/findIndex';\nimport SidebarLayout from '../../components/sidebarLayout';\nimport SortableList from '../../components/list';\nimport MonsterEncounters from './encounterList';\nimport { ADD_ACTOR } from '../../actions';\nimport { PLAYERS_ADD } from '../../reducers/players';\nimport { MONSTERS_ADD, enhanceMonster } from '../../reducers/monsters';\nimport IconAdd from \"../../svg/add.svg\";\nimport IconLightning from \"../../svg/lightning.svg\";\nimport './monsters.scss';\n\nvar MonsterLookup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MonsterLookup, _Component);\n\n  function MonsterLookup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MonsterLookup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MonsterLookup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: '',\n      monsters: []\n    };\n\n    _this.filterMonsters = function () {\n      var _this$state = _this.state,\n          search = _this$state.search,\n          monsters = _this$state.monsters;\n      var customMonsters = _this.props.monsters.customMonsters;\n\n      var filteredMonsters = _toConsumableArray(monsters).concat(_toConsumableArray(customMonsters));\n\n      if (search) {\n        filteredMonsters = filter(filteredMonsters, function (monster) {\n          return monster.name.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n        });\n      }\n\n      return filteredMonsters;\n    };\n\n    _this.onInput = function (e) {\n      _this.setState({\n        search: e.target.value\n      });\n    };\n\n    _this.createMonsterAddPlayerAction = function (monsterData) {\n      return {\n        type: PLAYERS_ADD,\n        players: [{\n          name: monsterData.name,\n          stats: monsterData\n        }]\n      };\n    };\n\n    _this.addMonsterToEncounter = function (monster) {\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          selectedEncounter = _this$props.monsters.selectedEncounter;\n\n      if (selectedEncounter && monster && monster.id) {\n        dispatch({\n          type: MONSTERS_ADD,\n          encounterId: selectedEncounter,\n          monster: monster\n        }); // dispatch(this.createMonsterAddPlayerAction(monster));\n      }\n    };\n\n    _this.quickAddMonsterToInitiative = function (monster) {\n      var dispatch = _this.props.dispatch;\n      dispatch({\n        type: ADD_ACTOR,\n        actor: enhanceMonster(monster)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MonsterLookup, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      import(\n      /* webpackChunkName: \"monsters\" */\n      '../../api/srd-monsters.json').then(function (module) {\n        _this2.setState({\n          monsters: module.default\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var search = this.state.search;\n      var _this$props$monsters = this.props.monsters,\n          encounters = _this$props$monsters.encounters,\n          selectedEncounter = _this$props$monsters.selectedEncounter;\n      var hasSelectedEncounter = findIndex(encounters, ['id', selectedEncounter]) !== -1;\n      var actions = [{\n        key: 'quickAdd',\n        onClick: this.quickAddMonsterToInitiative,\n        title: 'Add to initiative',\n        glyph: IconLightning\n      }];\n\n      if (hasSelectedEncounter) {\n        actions.push({\n          key: 'addToEncounter',\n          onClick: this.addMonsterToEncounter,\n          title: 'Add to encounter',\n          glyph: IconAdd\n        });\n      }\n\n      return React.createElement(SidebarLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"monstersearch\",\n        name: \"monstersearch\",\n        autoComplete: \"off\",\n        placeholder: \"Search for monsters...\",\n        value: search,\n        onInput: this.onInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(SortableList, {\n        listName: \"monsters\",\n        items: this.filterMonsters(),\n        onSortEnd: function onSortEnd() {},\n        colorNames: true,\n        actions: actions,\n        disableDragging: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(MonsterEncounters, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MonsterLookup;\n}(Component);\n\nMonsterLookup.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  monsters: PropTypes.shape({\n    encounters: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })).isRequired\n  }).isRequired\n};\nexport default connect(function (state) {\n  return state;\n})(MonsterLookup);","map":{"version":3,"sources":["/Users/jh/www/projects/stooge-dnd/src/containers/monsters/index.js"],"names":["React","Component","Fragment","PropTypes","connect","filter","findIndex","SidebarLayout","SortableList","MonsterEncounters","ADD_ACTOR","PLAYERS_ADD","MONSTERS_ADD","enhanceMonster","MonsterLookup","state","search","monsters","filterMonsters","customMonsters","props","filteredMonsters","monster","name","toLowerCase","indexOf","onInput","e","setState","target","value","createMonsterAddPlayerAction","monsterData","type","players","stats","addMonsterToEncounter","dispatch","selectedEncounter","id","encounterId","quickAddMonsterToInitiative","actor","then","module","default","encounters","hasSelectedEncounter","actions","key","onClick","title","glyph","IconLightning","push","IconAdd","propTypes","func","isRequired","shape","arrayOf","string"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport filter from 'lodash/filter';\nimport findIndex from 'lodash/findIndex';\n\nimport SidebarLayout from '../../components/sidebarLayout';\nimport SortableList from '../../components/list';\nimport MonsterEncounters from './encounterList';\nimport { ADD_ACTOR } from '../../actions';\nimport { PLAYERS_ADD } from '../../reducers/players';\nimport { MONSTERS_ADD, enhanceMonster } from '../../reducers/monsters';\nimport IconAdd from '../../svg/add.svg';\nimport IconLightning from '../../svg/lightning.svg';\n\nimport './monsters.scss';\n\nclass MonsterLookup extends Component {\n\tstatic propTypes = {\n\t\tdispatch: PropTypes.func.isRequired,\n\t\tmonsters: PropTypes.shape({\n\t\t\tencounters: PropTypes.arrayOf(\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\tid: PropTypes.string.isRequired,\n\t\t\t\t}),\n\t\t\t).isRequired,\n\t\t}).isRequired,\n\t};\n\n\tstate = {\n\t\tsearch: '',\n\t\tmonsters: [],\n\t};\n\n\tcomponentWillMount() {\n\t\timport(/* webpackChunkName: \"monsters\" */ '../../api/srd-monsters.json').then(\n\t\t\t(module) => {\n\t\t\t\tthis.setState({ monsters: module.default });\n\t\t\t},\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { search } = this.state;\n\t\tconst {\n\t\t\tmonsters: { encounters, selectedEncounter },\n\t\t} = this.props;\n\n\t\tconst hasSelectedEncounter = findIndex(encounters, ['id', selectedEncounter]) !== -1;\n\t\tconst actions = [{\n\t\t\tkey: 'quickAdd',\n\t\t\tonClick: this.quickAddMonsterToInitiative,\n\t\t\ttitle: 'Add to initiative',\n\t\t\tglyph: IconLightning,\n\t\t}];\n\n\n\n\t\tif (hasSelectedEncounter) {\n\t\t\tactions.push({\n\t\t\t\tkey: 'addToEncounter',\n\t\t\t\tonClick: this.addMonsterToEncounter,\n\t\t\t\ttitle: 'Add to encounter',\n\t\t\t\tglyph: IconAdd,\n\t\t\t});\n\t\t}\n\n\n\t\treturn (\n\t\t\t<SidebarLayout>\n\t\t\t\t<Fragment>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"monstersearch\"\n\t\t\t\t\t\t\tname=\"monstersearch\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tplaceholder=\"Search for monsters...\"\n\t\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\t\tonInput={this.onInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<SortableList\n\t\t\t\t\t\tlistName=\"monsters\"\n\t\t\t\t\t\titems={this.filterMonsters()}\n\t\t\t\t\t\tonSortEnd={() => {}}\n\t\t\t\t\t\tcolorNames\n\t\t\t\t\t\tactions={actions}\n\t\t\t\t\t\tdisableDragging\n\t\t\t\t\t/>\n\t\t\t\t</Fragment>\n\t\t\t\t<Fragment>\n\t\t\t\t\t<MonsterEncounters />\n\t\t\t\t</Fragment>\n\t\t\t</SidebarLayout>\n\t\t);\n\t}\n\n\tfilterMonsters = () => {\n\t\tconst { search, monsters } = this.state;\n\t\tconst { monsters: { customMonsters } } = this.props;\n\n\t\tlet filteredMonsters = [...monsters, ...customMonsters];\n\t\tif (search) {\n\t\t\tfilteredMonsters = filter(filteredMonsters, (monster) => {\n\t\t\t\treturn monster.name.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n\t\t\t});\n\t\t}\n\n\t\treturn filteredMonsters;\n\t};\n\n\tonInput = (e) => {\n\t\tthis.setState({\n\t\t\tsearch: e.target.value,\n\t\t});\n\t};\n\n\tcreateMonsterAddPlayerAction = (monsterData) => ({\n\t\ttype: PLAYERS_ADD,\n\t\tplayers: [\n\t\t\t{\n\t\t\t\tname: monsterData.name,\n\t\t\t\tstats: monsterData,\n\t\t\t},\n\t\t],\n\t});\n\n\taddMonsterToEncounter = (monster) => {\n\t\tconst {\n\t\t\tdispatch,\n\t\t\tmonsters: { selectedEncounter },\n\t\t} = this.props;\n\n\t\tif (selectedEncounter && monster && monster.id) {\n\t\t\tdispatch({\n\t\t\t\ttype: MONSTERS_ADD,\n\t\t\t\tencounterId: selectedEncounter,\n\t\t\t\tmonster,\n\t\t\t});\n\t\t\t// dispatch(this.createMonsterAddPlayerAction(monster));\n\t\t}\n\t};\n\n\tquickAddMonsterToInitiative = (monster) => {\n\t\tconst {\n\t\t\tdispatch,\n\t\t} = this.props;\n\n\t\tdispatch({\n\t\t\ttype: ADD_ACTOR,\n\t\t\tactor: enhanceMonster(monster),\n\t\t})\n\t};\n}\n\nexport default connect((state) => state)(MonsterLookup);\n"]},"metadata":{},"sourceType":"module"}