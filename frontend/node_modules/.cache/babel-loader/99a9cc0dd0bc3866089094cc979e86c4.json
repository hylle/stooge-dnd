{"ast":null,"code":"import _toConsumableArray from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/* eslint-disable no-param-reassign */\nimport filter from 'lodash/filter';\nimport sortBy from 'lodash/sortBy';\nimport find from 'lodash/find';\nimport produce from 'immer';\nimport createPersistStateFunction, { getInitialStateFromStorage } from '../utils/persistState';\nimport arrayMove from '../utils/arrayMove';\nimport { TYPE_PLAYER } from './players';\nimport { getAffix, resetAffix } from '../utils/affixes';\nexport var INITIATIVE_MOVE = 'initiative/MOVE';\nexport var INITIATIVE_ADD = 'initiative/ADD';\nexport var INITIATIVE_REMOVE = 'initiative/REMOVE';\nexport var INITIATIVE_TRANSFER_ENCOUNTER = 'initiative/TRANSFER_ENCOUNTER';\nexport var INITIATIVE_INIT_ROLL = 'initiative/INIT_ROLL';\nexport var INITIATIVE_CLEAR_MONSTERS = 'initiative/CLEAR_MONSTERS';\nexport var INITIATIVE_SET_INITIATIVE = 'initiative/SET_INITIATIVE';\nexport var INITIATIVE_TAKE_DAMAGE = 'initiative/TAKE_DAMAGE';\nexport var INITIATIVE_HEAL_DAMAGE = 'initiative/HEAL_DAMAGE';\nexport var INITIATIVE_STEP_FORWARD = 'initiative/STEP_FORWARD';\nexport var INITIATIVE_STEP_BACK = 'initiative/STEP_BACK';\nvar storageKey = 'stoogeInitiative';\nvar storageVersion = 3;\nvar defaultState = {\n  actors: [],\n  currentActor: 0\n};\nvar initialState = getInitialStateFromStorage(defaultState, storageKey, storageVersion);\nvar persistState = createPersistStateFunction(storageKey);\n\nfunction moveActors(state, oldIndex, newIndex) {\n  var newState = _objectSpread({}, state, {\n    actors: arrayMove(state.actors, oldIndex, newIndex)\n  });\n\n  return persistState(newState);\n}\n\nfunction addActor(state, actor) {\n  if (actor) {\n    var existingActor = find(state.actors, ['name', actor.name]);\n    var enhancedActor = actor;\n\n    if (existingActor) {\n      enhancedActor = _objectSpread({}, actor, {\n        affix: getAffix()\n      });\n    }\n\n    return persistState(_objectSpread({}, state, {\n      actors: sortBy(_toConsumableArray(state.actors).concat([enhancedActor]), ['initiative']).reverse()\n    }));\n  }\n\n  return state;\n}\n\nfunction removeActor(state, actor) {\n  var actors = filter(_toConsumableArray(state.actors), function (stateActor) {\n    return stateActor.id !== actor.id;\n  });\n\n  if (actors.length < state.actors.length) {\n    var newState = _objectSpread({}, state, {\n      actors: actors\n    });\n\n    return persistState(newState);\n  }\n\n  return state;\n}\n\nfunction clearMonsters(state) {\n  var newState = _objectSpread({}, state);\n\n  var actorsWithoutMonster = filter(state.actors, function (actor) {\n    return actor.type === TYPE_PLAYER;\n  });\n  newState.actors = actorsWithoutMonster;\n  resetAffix();\n  return persistState(newState);\n}\n\nfunction setActorInitiative(state, actor, initiative) {\n  var actorIndex = state.actors.indexOf(actor);\n\n  if (actorIndex !== -1) {\n    var newActors = filter(state.actors, function (stateActor) {\n      return stateActor.id !== actor.id;\n    });\n    newActors.push(_objectSpread({}, actor, {\n      initiative: initiative\n    }));\n\n    var newState = _objectSpread({}, state, {\n      actors: sortBy(newActors, ['initiative']).reverse()\n    });\n\n    return persistState(newState);\n  }\n\n  return state;\n}\n\nfunction takeDamage(state, actor, damage) {\n  var actorIndex = state.actors.indexOf(actor);\n\n  if (actorIndex !== -1 && damage) {\n    var damagedActor = _objectSpread({}, actor, {\n      currentHP: actor.currentHP - damage\n    });\n\n    var newState = _objectSpread({}, state);\n\n    newState.actors[actorIndex] = damagedActor;\n    return persistState(newState);\n  }\n\n  return state;\n}\n\nfunction healDamage(state, actor, heal) {\n  return takeDamage(state, actor, -heal);\n}\n\nfunction stepForwardInitiative(state) {\n  return produce(state, function (draft) {\n    var nextActor = draft.currentActor + 1;\n    draft.currentActor = nextActor >= draft.actors.length ? 0 : nextActor;\n    return draft;\n  });\n}\n\nfunction stepBackInitiative(state) {\n  return produce(state, function (draft) {\n    var prevActor = draft.currentActor - 1;\n    draft.currentActor = prevActor < 0 ? draft.actors.length - 1 : prevActor;\n    return draft;\n  });\n}\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INITIATIVE_ADD:\n      return addActor(state, action.actor);\n\n    case INITIATIVE_REMOVE:\n      return removeActor(state, action.actor);\n\n    case INITIATIVE_MOVE:\n      return moveActors(state, action.oldIndex, action.newIndex);\n\n    case INITIATIVE_CLEAR_MONSTERS:\n      return clearMonsters(state);\n\n    case INITIATIVE_SET_INITIATIVE:\n      return setActorInitiative(state, action.actor, action.initiative);\n\n    case INITIATIVE_TAKE_DAMAGE:\n      return takeDamage(state, action.actor, Math.abs(action.damage));\n\n    case INITIATIVE_HEAL_DAMAGE:\n      return healDamage(state, action.actor, Math.abs(action.heal));\n\n    case INITIATIVE_STEP_FORWARD:\n      return stepForwardInitiative(state);\n\n    case INITIATIVE_STEP_BACK:\n      return stepBackInitiative(state);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/jh/www/projects/stooge-dnd/src/reducers/initiative.js"],"names":["filter","sortBy","find","produce","createPersistStateFunction","getInitialStateFromStorage","arrayMove","TYPE_PLAYER","getAffix","resetAffix","INITIATIVE_MOVE","INITIATIVE_ADD","INITIATIVE_REMOVE","INITIATIVE_TRANSFER_ENCOUNTER","INITIATIVE_INIT_ROLL","INITIATIVE_CLEAR_MONSTERS","INITIATIVE_SET_INITIATIVE","INITIATIVE_TAKE_DAMAGE","INITIATIVE_HEAL_DAMAGE","INITIATIVE_STEP_FORWARD","INITIATIVE_STEP_BACK","storageKey","storageVersion","defaultState","actors","currentActor","initialState","persistState","moveActors","state","oldIndex","newIndex","newState","addActor","actor","existingActor","name","enhancedActor","affix","reverse","removeActor","stateActor","id","length","clearMonsters","actorsWithoutMonster","type","setActorInitiative","initiative","actorIndex","indexOf","newActors","push","takeDamage","damage","damagedActor","currentHP","healDamage","heal","stepForwardInitiative","draft","nextActor","stepBackInitiative","prevActor","action","Math","abs"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport filter from 'lodash/filter';\nimport sortBy from 'lodash/sortBy';\nimport find from 'lodash/find';\nimport produce from 'immer';\n\nimport createPersistStateFunction, {\n\tgetInitialStateFromStorage,\n} from '../utils/persistState';\nimport arrayMove from '../utils/arrayMove';\nimport { TYPE_PLAYER } from './players';\nimport { getAffix, resetAffix } from '../utils/affixes';\n\nexport const INITIATIVE_MOVE = 'initiative/MOVE';\nexport const INITIATIVE_ADD = 'initiative/ADD';\nexport const INITIATIVE_REMOVE = 'initiative/REMOVE';\nexport const INITIATIVE_TRANSFER_ENCOUNTER = 'initiative/TRANSFER_ENCOUNTER';\nexport const INITIATIVE_INIT_ROLL = 'initiative/INIT_ROLL';\nexport const INITIATIVE_CLEAR_MONSTERS = 'initiative/CLEAR_MONSTERS';\nexport const INITIATIVE_SET_INITIATIVE = 'initiative/SET_INITIATIVE';\nexport const INITIATIVE_TAKE_DAMAGE = 'initiative/TAKE_DAMAGE';\nexport const INITIATIVE_HEAL_DAMAGE = 'initiative/HEAL_DAMAGE';\nexport const INITIATIVE_STEP_FORWARD = 'initiative/STEP_FORWARD';\nexport const INITIATIVE_STEP_BACK = 'initiative/STEP_BACK';\n\nconst storageKey = 'stoogeInitiative';\nconst storageVersion = 3;\nconst defaultState = {\n\tactors: [],\n\tcurrentActor: 0,\n};\nconst initialState = getInitialStateFromStorage(\n\tdefaultState,\n\tstorageKey,\n\tstorageVersion,\n);\nconst persistState = createPersistStateFunction(storageKey);\n\nfunction moveActors(state, oldIndex, newIndex) {\n\tconst newState = {\n\t\t...state,\n\t\tactors: arrayMove(state.actors, oldIndex, newIndex),\n\t};\n\n\treturn persistState(newState);\n}\n\nfunction addActor(state, actor) {\n\tif (actor) {\n\t\tconst existingActor = find(state.actors, ['name', actor.name]);\n\t\tlet enhancedActor = actor;\n\t\tif (existingActor) {\n\t\t\tenhancedActor = {\n\t\t\t\t...actor,\n\t\t\t\taffix: getAffix(),\n\t\t\t};\n\t\t}\n\n\t\treturn persistState({\n\t\t\t...state,\n\t\t\tactors: sortBy(\n\t\t\t\t[...state.actors, enhancedActor],\n\t\t\t\t['initiative'],\n\t\t\t).reverse(),\n\t\t});\n\t}\n\n\treturn state;\n}\n\nfunction removeActor(state, actor) {\n\tconst actors = filter(\n\t\t[...state.actors],\n\t\t(stateActor) => stateActor.id !== actor.id,\n\t);\n\tif (actors.length < state.actors.length) {\n\t\tconst newState = {\n\t\t\t...state,\n\t\t\tactors,\n\t\t};\n\n\t\treturn persistState(newState);\n\t}\n\n\treturn state;\n}\n\nfunction clearMonsters(state) {\n\tconst newState = { ...state };\n\tconst actorsWithoutMonster = filter(\n\t\tstate.actors,\n\t\t(actor) => actor.type === TYPE_PLAYER,\n\t);\n\n\tnewState.actors = actorsWithoutMonster;\n\tresetAffix();\n\n\treturn persistState(newState);\n}\n\nfunction setActorInitiative(state, actor, initiative) {\n\tconst actorIndex = state.actors.indexOf(actor);\n\tif (actorIndex !== -1) {\n\t\tconst newActors = filter(\n\t\t\tstate.actors,\n\t\t\t(stateActor) => stateActor.id !== actor.id,\n\t\t);\n\n\t\tnewActors.push({\n\t\t\t...actor,\n\t\t\tinitiative,\n\t\t});\n\n\t\tconst newState = {\n\t\t\t...state,\n\t\t\tactors: sortBy(newActors, ['initiative']).reverse(),\n\t\t};\n\n\t\treturn persistState(newState);\n\t}\n\n\treturn state;\n}\n\nfunction takeDamage(state, actor, damage) {\n\tconst actorIndex = state.actors.indexOf(actor);\n\tif (actorIndex !== -1 && damage) {\n\t\tconst damagedActor = {\n\t\t\t...actor,\n\t\t\tcurrentHP: actor.currentHP - damage,\n\t\t};\n\n\t\tconst newState = { ...state };\n\t\tnewState.actors[actorIndex] = damagedActor;\n\n\t\treturn persistState(newState);\n\t}\n\n\treturn state;\n}\n\nfunction healDamage(state, actor, heal) {\n\treturn takeDamage(state, actor, -heal);\n}\n\nfunction stepForwardInitiative(state) {\n\treturn produce(state, (draft) => {\n\t\tconst nextActor = draft.currentActor + 1;\n\t\tdraft.currentActor = nextActor >= draft.actors.length ? 0 : nextActor;\n\n\t\treturn draft;\n\t});\n}\n\nfunction stepBackInitiative(state) {\n\treturn produce(state, (draft) => {\n\t\tconst prevActor = draft.currentActor - 1;\n\t\tdraft.currentActor = prevActor < 0 ? draft.actors.length - 1 : prevActor;\n\n\t\treturn draft;\n\t});\n}\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase INITIATIVE_ADD:\n\t\t\treturn addActor(state, action.actor);\n\t\tcase INITIATIVE_REMOVE:\n\t\t\treturn removeActor(state, action.actor);\n\t\tcase INITIATIVE_MOVE:\n\t\t\treturn moveActors(state, action.oldIndex, action.newIndex);\n\t\tcase INITIATIVE_CLEAR_MONSTERS:\n\t\t\treturn clearMonsters(state);\n\t\tcase INITIATIVE_SET_INITIATIVE:\n\t\t\treturn setActorInitiative(state, action.actor, action.initiative);\n\t\tcase INITIATIVE_TAKE_DAMAGE:\n\t\t\treturn takeDamage(state, action.actor, Math.abs(action.damage));\n\t\tcase INITIATIVE_HEAL_DAMAGE:\n\t\t\treturn healDamage(state, action.actor, Math.abs(action.heal));\n\t\tcase INITIATIVE_STEP_FORWARD:\n\t\t\treturn stepForwardInitiative(state);\n\t\tcase INITIATIVE_STEP_BACK:\n\t\t\treturn stepBackInitiative(state);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}