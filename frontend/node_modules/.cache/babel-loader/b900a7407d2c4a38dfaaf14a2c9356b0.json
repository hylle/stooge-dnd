{"ast":null,"code":"var RAINBOW = 'linear-gradient(to left, #e81123, #e81123 17%, #f7941d 17%, #f7941d 34%, #fff100 34%, #fff100 51%, #00a650 51%, #00a650 68%, #0054a5 68%, #0054a5 85%, #672d93 85%, #672d93)';\nvar colors = {\n  blue: {\n    main: 'blue',\n    complement: '#fff'\n  },\n  red: {\n    main: 'red',\n    complement: '#fff'\n  },\n  green: {\n    main: 'green',\n    complement: '#fff'\n  },\n  gold: {\n    main: 'gold',\n    complement: '#fff'\n  },\n  silver: {\n    main: 'silver',\n    complement: '#fff'\n  },\n  black: {\n    main: 'black',\n    complement: '#fff'\n  },\n  brown: {\n    main: '#4c270c',\n    complement: '#fff'\n  },\n  zombie: {\n    main: '#a6bd4f',\n    complement: '#fff'\n  },\n  goblin: {\n    main: '#41924B',\n    complement: '#fff'\n  },\n  unicorn: {\n    main: 'pink',\n    complement: '#000',\n    gradient: RAINBOW\n  },\n  blood: {\n    main: '#8a0707',\n    complement: '#fff'\n  },\n  copper: {\n    main: '#b87333',\n    complement: '#fff'\n  },\n  bronze: {\n    main: '#cd7f32',\n    complement: '#fff'\n  },\n  brass: {\n    main: '#b5a642',\n    complement: '#fff'\n  }\n};\n\nvar getColorsFromName = function getColorsFromName(name) {\n  var lcName = name.toLowerCase();\n  var colorNames = Object.keys(colors);\n\n  for (var index = 0; index < colorNames.length; index++) {\n    var colorName = colorNames[index];\n\n    if (lcName.indexOf(colorName) !== -1) {\n      var styleObj = colors[colorName];\n\n      if (styleObj && typeof styleObj === 'object') {\n        return styleObj;\n      }\n    }\n  }\n\n  return {};\n};\n\nexport default getColorsFromName;","map":{"version":3,"sources":["/Users/jh/www/projects/stooge-dnd/src/utils/colorFromName.js"],"names":["RAINBOW","colors","blue","main","complement","red","green","gold","silver","black","brown","zombie","goblin","unicorn","gradient","blood","copper","bronze","brass","getColorsFromName","name","lcName","toLowerCase","colorNames","Object","keys","index","length","colorName","indexOf","styleObj"],"mappings":"AAAA,IAAMA,OAAO,GAAG,8KAAhB;AACA,IAAMC,MAAM,GAAG;AACdC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,UAAU,EAAE;AAA5B,GADQ;AAEdC,EAAAA,GAAG,EAAE;AAAEF,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,UAAU,EAAE;AAA3B,GAFS;AAGdE,EAAAA,KAAK,EAAE;AAAEH,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,UAAU,EAAE;AAA7B,GAHO;AAIdG,EAAAA,IAAI,EAAE;AAAEJ,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,UAAU,EAAE;AAA5B,GAJQ;AAKdI,EAAAA,MAAM,EAAE;AAAEL,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,UAAU,EAAE;AAA9B,GALM;AAMdK,EAAAA,KAAK,EAAE;AAAEN,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,UAAU,EAAE;AAA7B,GANO;AAOdM,EAAAA,KAAK,EAAE;AAAEP,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,UAAU,EAAE;AAA/B,GAPO;AAQdO,EAAAA,MAAM,EAAE;AAAER,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,UAAU,EAAE;AAA/B,GARM;AASdQ,EAAAA,MAAM,EAAE;AAAET,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,UAAU,EAAE;AAA/B,GATM;AAUdS,EAAAA,OAAO,EAAE;AAAEV,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,UAAU,EAAE,MAA5B;AAAoCU,IAAAA,QAAQ,EAAEd;AAA9C,GAVK;AAWde,EAAAA,KAAK,EAAE;AAAEZ,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,UAAU,EAAE;AAA/B,GAXO;AAYdY,EAAAA,MAAM,EAAE;AAAEb,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,UAAU,EAAE;AAA/B,GAZM;AAada,EAAAA,MAAM,EAAE;AAAEd,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,UAAU,EAAE;AAA/B,GAbM;AAcdc,EAAAA,KAAK,EAAE;AAAEf,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,UAAU,EAAE;AAA/B;AAdO,CAAf;;AAiBA,IAAMe,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAU;AACnC,MAAMC,MAAM,GAAGD,IAAI,CAACE,WAAL,EAAf;AACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYxB,MAAZ,CAAnB;;AAEA,OAAK,IAAIyB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,UAAU,CAACI,MAAvC,EAA+CD,KAAK,EAApD,EAAwD;AACvD,QAAME,SAAS,GAAGL,UAAU,CAACG,KAAD,CAA5B;;AACA,QAAIL,MAAM,CAACQ,OAAP,CAAeD,SAAf,MAA8B,CAAC,CAAnC,EAAsC;AACrC,UAAME,QAAQ,GAAG7B,MAAM,CAAC2B,SAAD,CAAvB;;AACA,UAAIE,QAAQ,IAAI,OAAOA,QAAP,KAAoB,QAApC,EAA8C;AAC7C,eAAOA,QAAP;AACA;AACD;AACD;;AAED,SAAO,EAAP;AACA,CAfD;;AAiBA,eAAeX,iBAAf","sourcesContent":["const RAINBOW =\t'linear-gradient(to left, #e81123, #e81123 17%, #f7941d 17%, #f7941d 34%, #fff100 34%, #fff100 51%, #00a650 51%, #00a650 68%, #0054a5 68%, #0054a5 85%, #672d93 85%, #672d93)';\nconst colors = {\n\tblue: { main: 'blue', complement: '#fff' },\n\tred: { main: 'red', complement: '#fff' },\n\tgreen: { main: 'green', complement: '#fff' },\n\tgold: { main: 'gold', complement: '#fff' },\n\tsilver: { main: 'silver', complement: '#fff' },\n\tblack: { main: 'black', complement: '#fff' },\n\tbrown: { main: '#4c270c', complement: '#fff' },\n\tzombie: { main: '#a6bd4f', complement: '#fff' },\n\tgoblin: { main: '#41924B', complement: '#fff' },\n\tunicorn: { main: 'pink', complement: '#000', gradient: RAINBOW },\n\tblood: { main: '#8a0707', complement: '#fff' },\n\tcopper: { main: '#b87333', complement: '#fff' },\n\tbronze: { main: '#cd7f32', complement: '#fff' },\n\tbrass: { main: '#b5a642', complement: '#fff' },\n};\n\nconst getColorsFromName = (name) => {\n\tconst lcName = name.toLowerCase();\n\tconst colorNames = Object.keys(colors);\n\n\tfor (let index = 0; index < colorNames.length; index++) {\n\t\tconst colorName = colorNames[index];\n\t\tif (lcName.indexOf(colorName) !== -1) {\n\t\t\tconst styleObj = colors[colorName];\n\t\t\tif (styleObj && typeof styleObj === 'object') {\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {};\n};\n\nexport default getColorsFromName;\n"]},"metadata":{},"sourceType":"module"}