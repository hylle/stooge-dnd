{"ast":null,"code":"import _objectSpread from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jh/www/projects/stooge-dnd/src/containers/monsters/encounterList.js\";\n\n/* eslint-disable react/no-multi-comp */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport './encounterList.scss';\nimport { MONSTERS_ADD_ENCOUNTER, MONSTERS_REMOVE_ENCOUNTER, MONSTERS_SELECT_ENCOUNTER, MONSTERS_REMOVE, MONSTERS_ADD_CUSTOM } from '../../reducers/monsters';\nimport { INITIATIVE_TRANSFER_ENCOUNTER } from '../../reducers/initiative';\nvar PROPTYPE_ENCOUNTER = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  monsters: PropTypes.arrayOf(PropTypes.shape({}))\n});\nvar PROPTYPE_ITEMS = PropTypes.arrayOf(PROPTYPE_ENCOUNTER);\n\nvar addEncounter = function addEncounter(dispatch) {\n  dispatch({\n    type: MONSTERS_ADD_ENCOUNTER\n  });\n};\n\nvar addCustomEncounter = function addCustomEncounter(dispatch) {\n  var monster = {\n    name: window.prompt('Monster name?'),\n    hit_dice: window.prompt('Hit dice? (ex. 2d8)'),\n    customStatLink: window.prompt('Stats link? ( https://www.aidedd.org/dnd-filters/monsters.php )')\n  };\n  dispatch({\n    type: MONSTERS_ADD_CUSTOM,\n    monster: monster\n  });\n};\n\nvar removeEncounter = function removeEncounter(dispatch, encounterId) {\n  if (encounterId) {\n    dispatch({\n      type: MONSTERS_REMOVE_ENCOUNTER,\n      encounterId: encounterId\n    });\n  }\n};\n\nvar selectEncounter = function selectEncounter(dispatch, newSelectedEncounter, selectedEncounter) {\n  if (selectedEncounter !== newSelectedEncounter) {\n    dispatch({\n      type: MONSTERS_SELECT_ENCOUNTER,\n      encounterId: newSelectedEncounter\n    });\n  }\n};\n\nvar transferMonsters = function transferMonsters(dispatch, monsters) {\n  dispatch({\n    type: INITIATIVE_TRANSFER_ENCOUNTER,\n    monsters: monsters\n  });\n};\n\nvar removeMonster = function removeMonster(dispatch, encounterId, monsterId) {\n  dispatch({\n    type: MONSTERS_REMOVE,\n    encounterId: encounterId,\n    monsterId: monsterId\n  });\n};\n\nvar MonsterItem = function MonsterItem(_ref) {\n  var dispatch = _ref.dispatch,\n      encounter = _ref.encounter,\n      monster = _ref.monster,\n      index = _ref.index;\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, monster.name, React.createElement(\"button\", {\n    className: \"encounter-list__encounter__monster__button\",\n    onClick: function onClick() {\n      return removeMonster(dispatch, encounter.id, monster.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"-\"));\n};\n\nvar EncounterList = function EncounterList(props) {\n  var dispatch = props.dispatch,\n      encounter = props.encounter,\n      selectedEncounter = props.selectedEncounter;\n  var monsters = encounter.monsters;\n  return React.createElement(\"div\", {\n    className: classnames({\n      'encounter-list__encounter': true,\n      'encounter-list__encounter--selected': selectedEncounter === encounter.id\n    }),\n    onClick: function onClick() {\n      return selectEncounter(dispatch, encounter.id, selectedEncounter);\n    },\n    onKeyDown: function onKeyDown(e) {\n      var SPACE = 32;\n      var ENTER = 13;\n\n      if (e.keyCode === SPACE || e.keyCode === ENTER) {\n        selectEncounter(dispatch, encounter.id, selectedEncounter);\n      }\n    },\n    role: \"tab\",\n    tabIndex: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      removeEncounter(dispatch, encounter.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"delete\"), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      transferMonsters(dispatch, monsters);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"transfer to initiative\")), React.createElement(\"ol\", {\n    className: \"encounter-list__encounter__monsters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, monsters.map(function (monster, index) {\n    return React.createElement(MonsterItem, Object.assign({\n      key: monster.id + index,\n      index: index,\n      monster: monster\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  })));\n};\n\nEncounterList.defaultProps = _objectSpread({}, EncounterList.defaultProps);\n\nvar MonsterEncounters = function MonsterEncounters(_ref2) {\n  var dispatch = _ref2.dispatch,\n      encounters = _ref2.encounters,\n      selectedEncounter = _ref2.selectedEncounter;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"encounter-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"encounter-list__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: function onClick() {\n      return addEncounter(dispatch);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"New encounter\"), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: function onClick() {\n      return addCustomEncounter(dispatch);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Add custom monster\")), encounters.map(function (encounter) {\n    return React.createElement(EncounterList, {\n      key: encounter.id,\n      dispatch: dispatch,\n      encounter: encounter,\n      selectedEncounter: selectedEncounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    });\n  })));\n};\n\nMonsterEncounters.propTypes = {\n  encounters: PROPTYPE_ITEMS.isRequired,\n  selectedEncounter: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([false])]).isRequired,\n  dispatch: PropTypes.func.isRequired // onSortEnd: PropTypes.func.isRequired,\n\n};\nMonsterEncounters.defaultProps = {};\nexport default connect(function (state) {\n  var monsters = state.monsters;\n  var encounters = monsters.encounters,\n      selectedEncounter = monsters.selectedEncounter;\n  return {\n    dispatch: state.dispatch,\n    encounters: encounters,\n    selectedEncounter: selectedEncounter\n  };\n})(MonsterEncounters);","map":{"version":3,"sources":["/Users/jh/www/projects/stooge-dnd/src/containers/monsters/encounterList.js"],"names":["React","Fragment","PropTypes","connect","classnames","MONSTERS_ADD_ENCOUNTER","MONSTERS_REMOVE_ENCOUNTER","MONSTERS_SELECT_ENCOUNTER","MONSTERS_REMOVE","MONSTERS_ADD_CUSTOM","INITIATIVE_TRANSFER_ENCOUNTER","PROPTYPE_ENCOUNTER","shape","id","string","isRequired","monsters","arrayOf","PROPTYPE_ITEMS","addEncounter","dispatch","type","addCustomEncounter","monster","name","window","prompt","hit_dice","customStatLink","removeEncounter","encounterId","selectEncounter","newSelectedEncounter","selectedEncounter","transferMonsters","removeMonster","monsterId","MonsterItem","encounter","index","EncounterList","props","e","SPACE","ENTER","keyCode","stopPropagation","map","defaultProps","MonsterEncounters","encounters","propTypes","oneOfType","oneOf","func","state"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nimport './encounterList.scss';\nimport {\n\tMONSTERS_ADD_ENCOUNTER,\n\tMONSTERS_REMOVE_ENCOUNTER,\n\tMONSTERS_SELECT_ENCOUNTER,\n\tMONSTERS_REMOVE,\n\tMONSTERS_ADD_CUSTOM,\n} from '../../reducers/monsters';\nimport { INITIATIVE_TRANSFER_ENCOUNTER } from '../../reducers/initiative';\n\nconst PROPTYPE_ENCOUNTER = PropTypes.shape({\n\tid: PropTypes.string.isRequired,\n\tmonsters: PropTypes.arrayOf(PropTypes.shape({})),\n});\nconst PROPTYPE_ITEMS = PropTypes.arrayOf(PROPTYPE_ENCOUNTER);\n\nconst addEncounter = (dispatch) => {\n\tdispatch({\n\t\ttype: MONSTERS_ADD_ENCOUNTER,\n\t});\n};\n\nconst addCustomEncounter = (dispatch) => {\n\tconst monster = {\n\t\tname: window.prompt('Monster name?'),\n\t\thit_dice: window.prompt('Hit dice? (ex. 2d8)'),\n\t\tcustomStatLink: window.prompt('Stats link? ( https://www.aidedd.org/dnd-filters/monsters.php )'),\n\t};\n\n\tdispatch({\n\t\ttype: MONSTERS_ADD_CUSTOM,\n\t\tmonster,\n\t});\n};\n\nconst removeEncounter = (dispatch, encounterId) => {\n\tif (encounterId) {\n\t\tdispatch({\n\t\t\ttype: MONSTERS_REMOVE_ENCOUNTER,\n\t\t\tencounterId,\n\t\t});\n\t}\n};\n\nconst selectEncounter = (dispatch, newSelectedEncounter, selectedEncounter) => {\n\tif (selectedEncounter !== newSelectedEncounter) {\n\t\tdispatch({\n\t\t\ttype: MONSTERS_SELECT_ENCOUNTER,\n\t\t\tencounterId: newSelectedEncounter,\n\t\t});\n\t}\n};\n\nconst transferMonsters = (dispatch, monsters) => {\n\tdispatch({\n\t\ttype: INITIATIVE_TRANSFER_ENCOUNTER,\n\t\tmonsters,\n\t});\n};\n\nconst removeMonster = (dispatch, encounterId, monsterId) => {\n\tdispatch({\n\t\ttype: MONSTERS_REMOVE,\n\t\tencounterId,\n\t\tmonsterId,\n\t});\n};\n\nconst MonsterItem = ({ dispatch, encounter, monster, index }) => {\n\treturn (\n\t\t<li>\n\t\t\t{monster.name}\n\t\t\t<button\n\t\t\t\tclassName=\"encounter-list__encounter__monster__button\"\n\t\t\t\tonClick={() => removeMonster(dispatch, encounter.id, monster.id)}>\n\t\t\t\t-\n\t\t\t</button>\n\t\t</li>\n\t);\n};\n\nconst EncounterList = (props) => {\n\tconst { dispatch, encounter, selectedEncounter } = props;\n\tconst { monsters } = encounter;\n\treturn (\n\t\t<div\n\t\t\tclassName={classnames({\n\t\t\t\t'encounter-list__encounter': true,\n\t\t\t\t'encounter-list__encounter--selected':\n\t\t\t\t\tselectedEncounter === encounter.id,\n\t\t\t})}\n\t\t\tonClick={() => selectEncounter(dispatch, encounter.id, selectedEncounter)}\n\t\t\tonKeyDown={(e) => {\n\t\t\t\tconst SPACE = 32;\n\t\t\t\tconst ENTER = 13;\n\t\t\t\tif (e.keyCode === SPACE || e.keyCode === ENTER) {\n\t\t\t\t\tselectEncounter(dispatch, encounter.id, selectedEncounter);\n\t\t\t\t}\n\t\t\t}}\n\t\t\trole=\"tab\"\n\t\t\ttabIndex={0}\n\t\t>\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tremoveEncounter(dispatch, encounter.id);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tdelete\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\ttransferMonsters(dispatch, monsters);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\ttransfer to initiative\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t<ol className=\"encounter-list__encounter__monsters\">\n\t\t\t\t{monsters.map((monster, index) => (\n\t\t\t\t\t<MonsterItem\n\t\t\t\t\t\tkey={monster.id + index}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\tmonster={monster}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</div>\n\t);\n};\n\nEncounterList.defaultProps = {\n\t...EncounterList.defaultProps,\n};\n\nconst MonsterEncounters = ({ dispatch, encounters, selectedEncounter }) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"encounter-list\">\n\t\t\t\t<div className=\"encounter-list__actions\">\n\t\t\t\t\t<button type=\"submit\" onClick={() => addEncounter(dispatch)}>\n\t\t\t\t\t\tNew encounter\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type=\"submit\" onClick={() => addCustomEncounter(dispatch)}>\n\t\t\t\t\t\tAdd custom monster\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t{encounters.map((encounter) => (\n\t\t\t\t\t<EncounterList\n\t\t\t\t\t\tkey={encounter.id}\n\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\tencounter={encounter}\n\t\t\t\t\t\tselectedEncounter={selectedEncounter}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nMonsterEncounters.propTypes = {\n\tencounters: PROPTYPE_ITEMS.isRequired,\n\tselectedEncounter: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.oneOf([false]),\n\t]).isRequired,\n\tdispatch: PropTypes.func.isRequired,\n\t// onSortEnd: PropTypes.func.isRequired,\n};\n\nMonsterEncounters.defaultProps = {};\n\nexport default connect((state) => {\n\tconst { monsters } = state;\n\tconst { encounters, selectedEncounter } = monsters;\n\n\treturn {\n\t\tdispatch: state.dispatch,\n\t\tencounters,\n\t\tselectedEncounter,\n\t};\n})(MonsterEncounters);\n"]},"metadata":{},"sourceType":"module"}