{"ast":null,"code":"import _objectSpread from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/jh/www/projects/stooge-dnd/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport produce from 'immer';\nimport shortid from 'shortid';\nimport find from 'lodash/find';\nimport findIndex from 'lodash/findIndex';\nimport without from 'lodash/without';\nimport filter from 'lodash/filter';\nimport createPersistStateFunction, { getInitialStateFromStorage } from '../utils/persistState';\nexport var TYPE_MONSTER = 'monsters/TYPE_MONSTER';\nexport var MONSTERS_ADD = 'monsters/MONSTERS_ADD';\nexport var MONSTERS_ADD_CUSTOM = 'monsters/MONSTERS_ADD_CUSTOM';\nexport var MONSTERS_REMOVE = 'monsters/MONSTERS_REMOVE';\nexport var MONSTERS_ADD_ENCOUNTER = 'monsters/MONSTERS_ADD_ENCOUNTER';\nexport var MONSTERS_REMOVE_ENCOUNTER = 'monsters/MONSTERS_REMOVE_ENCOUNTER';\nexport var MONSTERS_SELECT_ENCOUNTER = 'monsters/MONSTERS_SELECT_ENCOUNTER';\nvar storageKey = 'stoogeMonsters';\nvar storageVersion = 4;\nvar defaultState = {\n  encounters: [],\n  customMonsters: [],\n  selectedEncounter: false\n};\nvar initialState = getInitialStateFromStorage(defaultState, storageKey, storageVersion);\nvar persistState = createPersistStateFunction(storageKey);\n\nvar enhanceMonster = function enhanceMonster(monster) {\n  return {\n    id: shortid.generate(),\n    name: monster.name,\n    type: TYPE_MONSTER,\n    stats: monster\n  };\n};\n\nfunction addMonster(state, encounterId, monster) {\n  var encounterIndex = findIndex(state.encounters, ['id', encounterId]);\n\n  if (encounterIndex !== -1) {\n    var newEncounters = _toConsumableArray(state.encounters);\n\n    newEncounters[encounterIndex].monsters.push(enhanceMonster(monster));\n    return persistState(_objectSpread({}, state, {\n      encounters: newEncounters\n    }));\n  }\n\n  return state;\n}\n\nfunction removeMonster(state, encounterId, monsterId) {\n  var encounterIndex = findIndex(state.encounters, ['id', encounterId]);\n\n  if (encounterIndex !== -1) {\n    var monsterIndex = findIndex(state.encounters[encounterIndex].monsters, ['id', monsterId]);\n\n    if (monsterIndex !== -1) {\n      var newEncounters = _toConsumableArray(state.encounters);\n\n      var newMonsters = filter(newEncounters[encounterIndex].monsters, function (mob) {\n        return mob.id !== monsterId;\n      });\n      newEncounters[encounterIndex].monsters = newMonsters;\n      return persistState(_objectSpread({}, state, {\n        encounters: newEncounters\n      }));\n    }\n  }\n\n  return state;\n}\n\nfunction addEncounter(state) {\n  var id = shortid.generate();\n  return persistState(_objectSpread({}, state, {\n    encounters: _toConsumableArray(state.encounters).concat([{\n      id: id,\n      monsters: []\n    }]),\n    selectedEncounter: id\n  }));\n}\n\nfunction removeEncounter(state, encounterId) {\n  var encounter = find(state.encounters, ['id', encounterId]);\n\n  if (encounter) {\n    var newState = _objectSpread({}, state);\n\n    newState.encounters = without(state.encounters, encounter);\n    return persistState(newState);\n  }\n\n  return state;\n}\n\nfunction selectedEncounter(state, encounterId) {\n  var encounter = find(state.encounters, ['id', encounterId]);\n\n  if (encounter) {\n    return persistState(_objectSpread({}, state, {\n      selectedEncounter: encounterId\n    }));\n  }\n\n  return state;\n}\n\nfunction addCustomMonster(state, monster) {\n  if (monster && monster.name && monster.hit_dice && monster.customStatLink) {\n    return persistState(produce(state, function (draft) {\n      monster.id = shortid.generate();\n      draft.customMonsters.push(monster);\n    }));\n  }\n\n  return state;\n}\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case MONSTERS_ADD:\n      return addMonster(state, action.encounterId, action.monster);\n\n    case MONSTERS_ADD_CUSTOM:\n      return addCustomMonster(state, action.monster);\n\n    case MONSTERS_REMOVE:\n      return removeMonster(state, action.encounterId, action.monsterId);\n\n    case MONSTERS_ADD_ENCOUNTER:\n      return addEncounter(state);\n\n    case MONSTERS_REMOVE_ENCOUNTER:\n      return removeEncounter(state, action.encounterId);\n\n    case MONSTERS_SELECT_ENCOUNTER:\n      return selectedEncounter(state, action.encounterId);\n\n    default:\n      return state;\n  }\n});\nexport { enhanceMonster };","map":{"version":3,"sources":["/Users/jh/www/projects/stooge-dnd/src/reducers/monsters.js"],"names":["produce","shortid","find","findIndex","without","filter","createPersistStateFunction","getInitialStateFromStorage","TYPE_MONSTER","MONSTERS_ADD","MONSTERS_ADD_CUSTOM","MONSTERS_REMOVE","MONSTERS_ADD_ENCOUNTER","MONSTERS_REMOVE_ENCOUNTER","MONSTERS_SELECT_ENCOUNTER","storageKey","storageVersion","defaultState","encounters","customMonsters","selectedEncounter","initialState","persistState","enhanceMonster","monster","id","generate","name","type","stats","addMonster","state","encounterId","encounterIndex","newEncounters","monsters","push","removeMonster","monsterId","monsterIndex","newMonsters","mob","addEncounter","removeEncounter","encounter","newState","addCustomMonster","hit_dice","customStatLink","draft","action"],"mappings":"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","sourcesContent":["import produce from 'immer';\nimport shortid from 'shortid';\nimport find from 'lodash/find';\nimport findIndex from 'lodash/findIndex';\nimport without from 'lodash/without';\nimport filter from 'lodash/filter';\nimport createPersistStateFunction, {\n\tgetInitialStateFromStorage,\n} from '../utils/persistState';\n\nexport const TYPE_MONSTER = 'monsters/TYPE_MONSTER';\nexport const MONSTERS_ADD = 'monsters/MONSTERS_ADD';\nexport const MONSTERS_ADD_CUSTOM = 'monsters/MONSTERS_ADD_CUSTOM';\nexport const MONSTERS_REMOVE = 'monsters/MONSTERS_REMOVE';\nexport const MONSTERS_ADD_ENCOUNTER = 'monsters/MONSTERS_ADD_ENCOUNTER';\nexport const MONSTERS_REMOVE_ENCOUNTER = 'monsters/MONSTERS_REMOVE_ENCOUNTER';\nexport const MONSTERS_SELECT_ENCOUNTER = 'monsters/MONSTERS_SELECT_ENCOUNTER';\n\nconst storageKey = 'stoogeMonsters';\nconst storageVersion = 4;\nconst defaultState = {\n\tencounters: [],\n\tcustomMonsters: [],\n\tselectedEncounter: false,\n};\nconst initialState = getInitialStateFromStorage(\n\tdefaultState,\n\tstorageKey,\n\tstorageVersion,\n);\nconst persistState = createPersistStateFunction(storageKey);\n\nconst enhanceMonster = (monster) => {\n\treturn {\n\t\tid: shortid.generate(),\n\t\tname: monster.name,\n\t\ttype: TYPE_MONSTER,\n\t\tstats: monster,\n\t};\n}\n\nfunction addMonster(state, encounterId, monster) {\n\tconst encounterIndex = findIndex(state.encounters, ['id', encounterId]);\n\tif (encounterIndex !== -1) {\n\t\tconst newEncounters = [...state.encounters];\n\t\tnewEncounters[encounterIndex].monsters.push(enhanceMonster(monster));\n\n\t\treturn persistState({\n\t\t\t...state,\n\t\t\tencounters: newEncounters,\n\t\t});\n\t}\n\n\treturn state;\n}\n\nfunction removeMonster(state, encounterId, monsterId) {\n\tconst encounterIndex = findIndex(state.encounters, ['id', encounterId]);\n\n\tif (encounterIndex !== -1) {\n\t\tconst monsterIndex = findIndex(state.encounters[encounterIndex].monsters, ['id', monsterId]);\n\n\t\tif (monsterIndex !== -1) {\n\t\t\tconst newEncounters = [...state.encounters];\n\t\t\tconst newMonsters = filter(newEncounters[encounterIndex].monsters, (mob) => mob.id !== monsterId);\n\t\t\tnewEncounters[encounterIndex].monsters = newMonsters;\n\n\t\t\treturn persistState({\n\t\t\t\t...state,\n\t\t\t\tencounters: newEncounters,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn state;\n}\n\nfunction addEncounter(state) {\n\tconst id = shortid.generate();\n\treturn persistState({\n\t\t...state,\n\t\tencounters: [\n\t\t\t...state.encounters,\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\tmonsters: [],\n\t\t\t},\n\t\t],\n\t\tselectedEncounter: id,\n\t});\n}\n\nfunction removeEncounter(state, encounterId) {\n\tconst encounter = find(state.encounters, ['id', encounterId]);\n\tif (encounter) {\n\t\tconst newState = { ...state };\n\t\tnewState.encounters = without(state.encounters, encounter);\n\t\treturn persistState(newState);\n\t}\n\n\treturn state;\n}\n\nfunction selectedEncounter(state, encounterId) {\n\tconst encounter = find(state.encounters, ['id', encounterId]);\n\tif (encounter) {\n\t\treturn persistState({\n\t\t\t...state,\n\t\t\tselectedEncounter: encounterId,\n\t\t});\n\t}\n\n\treturn state;\n}\n\nfunction addCustomMonster(state, monster) {\n\tif (monster && monster.name && monster.hit_dice && monster.customStatLink) {\n\t\treturn persistState(produce(state, (draft) => {\n\t\t\tmonster.id = shortid.generate();\n\t\t\tdraft.customMonsters.push(monster);\n\t\t}));\n\t}\n\n\treturn state;\n}\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase MONSTERS_ADD:\n\t\t\treturn addMonster(state, action.encounterId, action.monster);\n\t\tcase MONSTERS_ADD_CUSTOM:\n\t\t\treturn addCustomMonster(state, action.monster);\n\t\tcase MONSTERS_REMOVE:\n\t\t\treturn removeMonster(state, action.encounterId, action.monsterId);\n\t\tcase MONSTERS_ADD_ENCOUNTER:\n\t\t\treturn addEncounter(state);\n\t\tcase MONSTERS_REMOVE_ENCOUNTER:\n\t\t\treturn removeEncounter(state, action.encounterId);\n\t\tcase MONSTERS_SELECT_ENCOUNTER:\n\t\t\treturn selectedEncounter(state, action.encounterId);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport { enhanceMonster };\n"]},"metadata":{},"sourceType":"module"}