{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createHistory from 'history/createBrowserHistory';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\nexport var history = createHistory();\nvar initialState = {};\nvar enhancers = [];\nvar sagaMiddleware = createSagaMiddleware();\nvar middleware = [routerMiddleware(history), sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  var devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nvar composedEnhancers = compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers));\nvar store = createStore(connectRouter(history)(rootReducer), initialState, composedEnhancers); // then run the saga\n\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/Users/jh/www/projects/stooge-dnd/src/store.js"],"names":["createStore","applyMiddleware","compose","connectRouter","routerMiddleware","createHistory","createSagaMiddleware","rootReducer","rootSaga","history","initialState","enhancers","sagaMiddleware","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","composedEnhancers","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,OAAOC,QAAP,MAAqB,SAArB;AAEA,OAAO,IAAMC,OAAO,GAAGJ,aAAa,EAA7B;AAEP,IAAMK,YAAY,GAAG,EAArB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AACA,IAAMO,UAAU,GAAG,CAACT,gBAAgB,CAACK,OAAD,CAAjB,EAA4BG,cAA5B,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC3C,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,4BAAjC;;AAEA,MAAI,OAAOF,iBAAP,KAA6B,UAAjC,EAA6C;AAC5CN,IAAAA,SAAS,CAACS,IAAV,CAAeH,iBAAiB,EAAhC;AACA;AACD;;AAED,IAAMI,iBAAiB,GAAGnB,OAAO,MAAP,UACzBD,eAAe,MAAf,SAAmBY,UAAnB,CADyB,SAEtBF,SAFsB,EAA1B;AAKA,IAAMW,KAAK,GAAGtB,WAAW,CACxBG,aAAa,CAACM,OAAD,CAAb,CAAuBF,WAAvB,CADwB,EAExBG,YAFwB,EAGxBW,iBAHwB,CAAzB,C,CAMA;;AACAT,cAAc,CAACW,GAAf,CAAmBf,QAAnB;AAEA,eAAec,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createHistory from 'history/createBrowserHistory';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\n\nimport rootSaga from './sagas';\n\nexport const history = createHistory();\n\nconst initialState = {};\nconst enhancers = [];\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [routerMiddleware(history), sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n\tconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n\tif (typeof devToolsExtension === 'function') {\n\t\tenhancers.push(devToolsExtension());\n\t}\n}\n\nconst composedEnhancers = compose(\n\tapplyMiddleware(...middleware),\n\t...enhancers,\n);\n\nconst store = createStore(\n\tconnectRouter(history)(rootReducer),\n\tinitialState,\n\tcomposedEnhancers,\n);\n\n// then run the saga\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}